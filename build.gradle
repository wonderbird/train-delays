plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.12.0'
}

group = 'systems.boos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // adding the Jackson reference automatically allows processing application/xml response bodies
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    testImplementation 'net.sourceforge.htmlunit:htmlunit:2.67.0'

    testImplementation 'au.com.dius.pact.consumer:java8:4.1.39'
    testImplementation 'au.com.dius.pact.consumer:junit5:4.5.0'
    testImplementation 'au.com.dius.pact.provider:junit5spring:4.3.15'

    testImplementation 'org.json:json:20220924'
    testImplementation 'org.apache.commons:commons-collections4:4.4'
    testImplementation 'io.cucumber:cucumber-spring:7.10.1'
    testImplementation 'io.cucumber:cucumber-java:7.10.1'
    testImplementation 'io.cucumber:cucumber-junit:7.10.1'
    testImplementation 'org.mock-server:mockserver-netty:5.14.0'
    testImplementation 'org.mockito:mockito-inline:4.8.0'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'systems.boos.traindelays', 'src/test/resources']
        }
    }
}

jacocoTestReport {
    reports {
        xml.required = true // coveralls plugin depends on xml format report
        html.required = true
    }
}

// For coveralls to work in the GitHub action, you need to configure the COVERALLS_REPO_TOKEN secret in the
// GitHub project settings.
coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}
